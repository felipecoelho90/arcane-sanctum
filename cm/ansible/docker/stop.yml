---
# Playbook to stop FreshRSS Docker Compose project

- name: Stop FreshRSS
  hosts: all
  tasks:
    - name: Stop containers from project {{ config_dir }}
      community.docker.docker_compose_v2:
        project_src: "{{ config_dir }}"
        state: absent
      register: project_info

    - name: Create backup of docker-data for the project {{ config_dir }}
      ansible.builtin.archive:
        path: "{{ data_dir }}"
        dest: "{{ backup_dir }}/freshrss-{{ ansible_date_time.iso8601_basic_short }}.tar.gz"
        format: gz
      register: backup_result

    - name: Start containers from project {{ config_dir }}
      community.docker.docker_compose_v2:
        project_src: "{{ config_dir }}"
        state: present
      register: project_info

    # - name: Display container status
    #   ansible.builtin.debug:
    #     msg: "{{ item }}"
    #   with_items: "{{ project_info.stderr_lines }}"
    #   when: item is string

    - name: Create Python virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv {{ venv_path }}
        creates: "{{ venv_path }}"

    - name: Install OCI Python SDK in virtual environment
      ansible.builtin.pip:
        name: oci
        state: present
        executable: "{{ venv_path }}/bin/pip"

    - name: Upload backup to OCI bucket
      oracle.oci.oci_object_storage_object:
        config_file_location: "{{ oci_config_file }}"
        bucket_name: "{{ oci_bucket_name }}"
        namespace_name: "{{ oci_namespace }}"
        object_name: "backups/{{ backup_result.dest | basename }}"
        src: "{{ backup_result.dest }}"
        state: present
      environment:
        PATH: "{{ venv_path }}/bin:{{ ansible_env.PATH }}"
        PYTHONPATH: "{{ venv_path }}/lib/python3/dist-packages:{{ ansible_env.PYTHONPATH | default('') }}"
        VIRTUAL_ENV: "{{ venv_path }}"
      vars:
        ansible_python_interpreter: "{{ venv_path }}/bin/python"
      register: upload_result

    - name: Remove local backup file
      ansible.builtin.file:
        path: "{{ backup_result.dest }}"
        state: absent
      when: upload_result.changed
